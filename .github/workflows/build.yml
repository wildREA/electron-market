name: Build Electron App

on:
  push:
    branches:
      - master
    paths:
      - 'app/**'         # Only run when files in the app folder are modified
      - '.github/workflows/**'  # Also run when files in the workflows folder are modified
  pull_request:
    branches:
      - master
    paths:
      - 'app/**'         # Trigger for pull requests on the app folder only
      - '.github/workflows/**'  # Also trigger for pull requests on the workflows folder

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install dependencies
        working-directory: app
        run: |
          npm ci

      - name: Build Electron app
        working-directory: app
        run: |
          npm run dist

      - name: Check if dist directory exists
        id: check-dist
        shell: bash
        run: |
          if [ -d "app/dist" ]; then
            echo "dist_exists=true" >> $GITHUB_ENV
          else
            echo "dist_exists=false" >> $GITHUB_ENV
          fi

      - name: Upload Build Artifacts
        if: env.dist_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: electron-market-build-${{ matrix.os }}
          path: app/dist/
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from package.json
        id: version
        working-directory: app
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check-tag
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.git.getRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/v${{ steps.version.outputs.version }}`
              });
              core.setOutput('exists', 'true');
            } catch (error) {
              if (error.status === 404) {
                core.setOutput('exists', 'false');
              } else {
                throw error;
              }
            }

      - name: Create Git tag
        if: steps.check-tag.outputs.exists == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${{ steps.version.outputs.version }}`,
              sha: context.sha
            })

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: |
          ls -R artifacts/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: |
            artifacts/electron-market-build-ubuntu-latest/*.AppImage
            artifacts/electron-market-build-ubuntu-latest/*.zip
            artifacts/electron-market-build-windows-latest/*.exe
            artifacts/electron-market-build-windows-latest/*.zip
            artifacts/electron-market-build-macos-latest/*.dmg
            artifacts/electron-market-build-macos-latest/*.zip
          generate_release_notes: true
          draft: false
          prerelease: false